Find the popularity percentage for each user on Meta/Facebook. The popularity percentage is defined as the total number of friends the user has divided by the total number of users on the platform, then converted into a percentage by multiplying by 100.
Output each user along with their popularity percentage. Order records in ascending order by user id.
The 'user1' and 'user2' column are pairs of friends.

	user1	user2
	2		1
	1		3
	4		1
	1		5
	1		6
	2		6
	7		2
	8		3
	3		9


/*
	drop table facebook_friends;
	create table facebook_friends
		 ( user1 int
		 , user2 int
		); 

	insert into  facebook_friends values(2 ,1 );
	insert into  facebook_friends values(1 , 3);
	insert into  facebook_friends values(4 ,1);
	insert into  facebook_friends values(1 , 5);
	insert into  facebook_friends values(1 , 6);
	insert into  facebook_friends values(2 , 6);
	insert into  facebook_friends values(7 , 2);
	insert into  facebook_friends values(8 , 3);
	insert into  facebook_friends values(3 , 9);

	--ASSUMPTIONS

	 1) total number of unique users
	 2) total number of friends friends the user has 
	 3) popularity percentage  total number of friends the user has / total number of users
 
*/
 
 1) total number of unique users 
 --UNIQUE SET OF USERS
   SELECT distinct(user1) as user1 
      FROM  facebook_friends
   UNION 
   SELECT distinct(user2) as user2 from facebook_friends
  
  *******
  user1
  *******
	5
	4
	6
	2
	7
	1
	8
	9
	3
	
	SELECT 
        count(*) as total_users
        FROM
         ( SELECT distinct(user1) as user1 
             FROM  facebook_friends
          UNION 
             SELECT distinct(user2) as user2 
              FROM facebook_friends) total_friends

   *******
   total_users
   *******
    9
	 2) total number of friends friends the user has 
  -- users who have facebook_friends
  -- Note : we need to use union as it would remove duplicates
  -- 
/*
    user1(user) | user2(friends of the user)
     Tom  Alice
     Alice Tom
     Alice Bob
     Alice Tom
     Tom Alice 
     Bob Alice

     as we are using union it would deduplicate  
     Alice Tom
     Tom Alice 

     Tom  Alice
     Alice Bob
     Alice Tom
     Bob Alice
*/
  

    SELECT 
    * 
    FROM
      (
       SELECT 
        count(*) as total_users
        FROM
         ( SELECT distinct(user1) as user1 
             FROM  facebook_friends
          UNION 
             SELECT distinct(user2) as user2 
              FROM facebook_friends) total_friends
         ) tu
  JOIN
      (
        SELECT  user1
              , user2
          FROM facebook_friends
        UNION
        SELECT user2 as user1
            , user1 as user2
        FROM facebook_friends
      ) user_friends
    ON 1=1;
	  
	  **************************** 
	  total_users	user1	user2
	  ****************************
		9			6			1
		9			2			7
		9			1			3
		9			9			3
		9			7			2
		9			6			2
		9			3			9
		9			1			2
		9			4			1
		9			3			8
		9			1			5
		9			1			4
		9			3			1
		9			8			3
		9			1			6
		9			2			6
		9			5			1
		9			2		    1
		
	3) popularity percentage  total number of friends the user has / total number of users	

      SELECT user1
         , count(*)/ max(tu.total_users)::FLOAT as popularity_percentage
           FROM
                (
                SELECT 
                  count(*) as total_users
                  FROM
                  ( SELECT distinct(user1) as user1 
                      FROM  facebook_friends
                    UNION 
                      SELECT distinct(user2) as user2 
                        FROM facebook_friends) total_friends
                  ) tu
            JOIN
                (
                  SELECT  user1
                        , user2
                    FROM facebook_friends
                  UNION
                  SELECT user2 as user1
                      , user1 as user2
                  FROM facebook_friends
                ) user_friends
              ON 1=1 
      GROUP BY user1;
      
	**********************************  
	user1	popularity_percentage
	*******************************
	9		0.111
	3		0.333
	5		0.111
	4		0.111
	6		0.222
	2		0.333
	7		0.111
	1		0.556
	8		0.111  
	
	
   SOLUTION WITHOUT USING JOIN
    
	      
   SELECT  b.users
          , cast(count(*) /(SELECT count(distinct(a.users)) total_users
              FROM 
                (SELECT distinct(user1) users
                 FROM facebook_friends u1
                 UNION 
                SELECT distinct(user2) users
                FROM facebook_friends u2
                )a)::float as decimal(4,2)) total_users
      FROM
        (SELECT user1 as users
              , user2 as followers
            FROM facebook_friends
         UNION  
         SELECT user2 as users
              , user2 as followers
            FROM facebook_friends
        )b 
        GROUP BY b.users;
      
	