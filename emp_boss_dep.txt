#EMPLOYEE TABLE
	
	create table employee(employee_id integer,department_id integer,boss_id integer,name varchar(50),salary integer);
	
	insert into employee values(1,1,2,'John Smith',20000);
	insert into employee values(2,5,4,'Ava Muffinson',10000);
	insert into employee values(3,2,5,'Cailin Ninson',30000);
	insert into employee values(4,2,5,'Mike Peterson',20000);
	insert into employee values(5,2,1,'Ian Peterson',80000);
	insert into employee values(6,3,null,'John Mills',50000);

	+-------------+---------------+---------+---------------+--------+
	| employee_id | department_id | boss_id | name          | salary |
	+-------------+---------------+---------+---------------+--------+
	|           1 |             1 |       2 | John Smith    |  20000 |
	|           2 |             5 |       4 | Ava Muffinson |  10000 |
	|           3 |             2 |       5 | Cailin Ninson |  30000 |
	|           4 |             2 |       5 | Mike Peterson |  20000 |
	|           5 |             2 |       1 | Ian Peterson  |  80000 |
	|           6 |             3 |    NULL | John Mills    |  50000 |
	+-------------+---------------+---------+---------------+--------+
		
	#DEPARTMENT TABLE
	create table department(department_id integer, name varchar(50));
	insert into department values(1,'rate');
	insert into department values(2,'refund');
	insert into department values(4,'UI');
	insert into department values(3,'electric');
	insert into department values(5,'innovation');
	+---------------+------------+
	| department_id | name       |
	+---------------+------------+
	|             1 | rate       |
	|             2 | refund     |
	|             3 | electric   |
	|             5 | innovation |
	+---------------+------------+

#SELECT EMPLOYEES WHO ARE NOT A BOSS
	select e.employee_id 
		from employee e
		left outer join employee b
		on e.employee_id=b.boss_id
		where b.employee_id is null;
	
	employee_id 
	-------------
           3
           6
	+-------------+
# SELECT EMPLOYEES WHO DO NOT HAVE A BOSS
    select employee_id 
		from employee 
		where boss_id is null;
	+-------------+
	| employee_id |
	+-------------+
	|           6 |
	+-------------+
	
#LIST EMPLOYEES WHO HAVE BIGGER SALARIES FROM THIER BOSSES.
	select e.employee_id,e.boss_id,e.salary as emp_salary,b.salary as boss_salary 
		from employee e join employee b 
			on e.boss_id = b.employee_id 
		where e.salary > b.salary;
	+-------------+---------+------------+-------------+
	| employee_id | boss_id | emp_salary | boss_salary |
	+-------------+---------+------------+-------------+
	|           5 |       1 |      80000 |       20000 |
	|           1 |       2 |      20000 |       10000 |
	+-------------+---------+------------+-------------+
	
#LIST EMPLOYEES WHO HAVE BIGGEST SALARY IN THIER DEPARTMENTS
	#using cte
    with cte
        as
          (
            select employee_id
                  ,department_id
                  ,salary
                  ,dense_rank() over (partition by department_id order by salary desc) rnk
                   from employee
          )
          
        select * from cte where rnk =1;
	
	#without using cte
    select *
        from 
         (
            select employee_id
                  ,department_id
                  ,salary
                  ,dense_rank() over (partition by department_id order by salary desc) rnk
                   from employee
          )a
        where a.rnk=1
   
    select e.employee_id,e.department_id,b.max_salary 
		from employee e 
		join (select department_id,max(salary) as max_salary 
					from employee group by department_id) as b 
					on e.department_id =b.department_id 
					and e.salary=b.max_salary;
	+-------------+---------------+------------+
	| employee_id | department_id | max_salary |
	+-------------+---------------+------------+
	|           1 |             1 |      20000 |
	|           2 |             5 |      10000 |
	|           5 |             2 |      80000 |
	|           6 |             3 |      50000 |
	+-------------+---------------+------------+

#LIST DEPARTMENTS THAT HAVE LESS THAN 3 PEOPLE IN IT.
    select department_id 
	from employee 
	group by department_id 
	having count(department_id) < 3;
	+---------------+
	| department_id |
	+---------------+
	|             1 |
	|             5 |
	|             3 |
	+---------------+

	# Using sub query
	select a.department_id,a.cnt from (select department_id,count(department_id) as cnt 
		from employee group by department_id) a 
		where a.cnt <3; 
	+---------------+-----+
	| department_id | cnt |
	+---------------+-----+
	|             1 |   1 |
	|             5 |   1 |
	|             3 |   1 |
	+---------------+-----+

#LIST ALL DEPARTMENTS ALONG WITH THE NUMBER OF PEOPLE
	select department_id,count(employee_id) as emp_count  
		from employee
		group by department_id
	+---------------+-----------+
	| department_id | emp_count |
	+---------------+-----------+
	|             1 |         1 |
	|             5 |         1 |
	|             2 |         3 |
	|             3 |         1 |
	+---------------+-----------+

#LIST ALL DEPARTMENTS ALONG WITH THE TOTAL SALARY
    select department_id,sum(salary) as total_salary 
		from employee 
		group by department_id ;
	+---------------+--------------+
	| department_id | total_salary |
	+---------------+--------------+
	|             1 |        20000 |
	|             5 |        10000 |
	|             2 |       130000 |
	|             3 |        50000 |
	+---------------+--------------+

 /****
   EMPLOYEE BOSS RELATIONSHIP
   JOIN EXPLAINED.
  **/
   
create table employee(employee_id integer,boss_id integer);
  
  insert into employee values(1,2);
  insert into employee values(2,5);
  insert into employee values(3,null);
  +-------------+---------+
| employee_id | boss_id |
+-------------+---------+
|           1 |       2 |
|           2 |       5 |
|           3 |    NULL |
+-------------+---------+
 
  #SIMPLE JOIN WTIH 
  # BY DEFAULT LEFT TABLE IS SELECTED ON THE LEFT SIDE.
  # In this join is formed between employee_id =2 and boss_id=2
  # From employee table we have 2 and 5
  # From boss table we have 2 and 1 
  select  e.employee_id
        , e.boss_id
        , b.employee_id
        , b.boss_id
         from employee e 
         join employee b
           on e.employee_id =b.boss_id;
  +-------------+---------+-------------+---------+
  | employee_id | boss_id | employee_id | boss_id |
  +-------------+---------+-------------+---------+
  |           2 |       5 |           1 |       2 |
  +-------------+---------+-------------+---------+
 
 # LEFT JOIN
 select  e.employee_id
        , e.boss_id
        , b.employee_id
        , b.boss_id
         from employee e 
         left outer join employee b
         on e.employee_id =b.boss_id;                 
  +-------------+---------+-------------+---------+
  | employee_id | boss_id | employee_id | boss_id |
  +-------------+---------+-------------+---------+
  |           2 |       5 |           1 |       2 |
  |           1 |       2 |        NULL |    NULL |
  |           3 |    NULL |        NULL |    NULL |
  +-------------+---------+-------------+---------+
  
 # RIGHT JOIN
 select  e.employee_id
        , e.boss_id
        , b.employee_id
        , b.boss_id
         from employee e 
         right outer join employee b
         on e.employee_id =b.boss_id;  

# FIND EMPLOYEES WHO DOES NOT HAVE BOSS
select  e.employee_id
        , e.boss_id
        , b.employee_id
        , b.boss_id
         from employee e 
         left outer join employee b
         on e.employee_id =b.boss_id
         where b.employee_id is null;

