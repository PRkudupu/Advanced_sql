	The employee table holds the salary information in a year.
	Write a SQL to get the cumulative sum of an employee's salary over a period of 3 months but exclude the most recent month.
	The result should be displayed by 'id' ascending, and then by 'month' descending.


	DDL SCRIPTS
	create table employee (id int,month int,salary int);
	insert into  employee values(1,1,20);
	insert into  employee values(2,1,20);
	insert into  employee values(1,2,30);
	insert into  employee values(2,2,30);
	insert into  employee values(3,2,40);
	insert into  employee values(1,3,40);
	insert into  employee values(3,3,60);
	insert into  employee values(1,4,60);
	insert into  employee values(3,4,70);
			
	+------+-------+--------+
	| id   | month | salary |
	+------+-------+--------+
	|    1 |     1 |     20 |
	|    1 |     2 |     30 |
	|    1 |     3 |     40 |
	|    1 |     4 |     60 |
	|    2 |     1 |     20 |
	|    2 |     2 |     30 |
	|    3 |     2 |     40 |
	|    3 |     3 |     60 |
	|    3 |     4 |     70 |
	
	1) WRITE A SQL TO GET THE CUMULATIVE SUM OF AN EMPLOYEE SALARY OVER A PERIOD OF 3 MONTHS BUT EXCLUDE THE MOST RECENT MONTH.
	Output
	
	| id | month | salary |
	|----|-------|--------|
	| 1  | 3     | 90     |
	| 1  | 2     | 50     |
	| 1  | 1     | 20     |
	| 2  | 1     | 20     |
	| 3  | 3     | 100    |
	| 3  | 2     | 40     |
	
     
	EXPLANTATION
		employee '1' has 3 salary records for the following 3 months except the most recent month '4': salary 40 for month '3', 30 for month '2' and 20 for month '1'
		So the cumulative sum of salary of this employee over 3 months is 90(40+30+20), 50(30+20) and 20 respectively.

		| id | month | salary |
		|----|-------|--------|
		| 1  | 3     | 90     |
		| 1  | 2     | 50     |
		| 1  | 1     | 20     |
		employee '2' only has one salary record (month '1') except its most recent month '2'.
		| id | month | salary |
		|----|-------|--------|
		| 2  | 1     | 20     |
		Employ '3' has two salary records except its most recent pay month '4': month '3' with 60 and month '2' with 40. So the cumulative salary is as following.
		| id | month | salary |
		|----|-------|--------|
		| 3  | 3     | 100    |
		| 3  | 2     | 40     |
   
	SOLUTION
		USING AGGREGATE FUNCTIONS
		select e.id
		   , e.month
		   , sum(e.salary) over(partition by e.id order by e.salary) sum_salary
		   from 
		   employee e
		   join (select id 
					 , max(month) max_month
					 from employee
					 group by id) m
		  on e.id=m.id  and e.month!=m.max_month  
		   order by  id ,month desc;
	
		+------+-------+------------+
		| id   | month | sum_salary |
		+------+-------+------------+
		|    1 |     3 |         90 |
		|    1 |     2 |         50 |
		|    1 |     1 |         20 |
		|    2 |     1 |         20 |
		|    3 |     3 |        100 |
		|    3 |     2 |         40 |
		+------+-------+------------+
		
		We can solve this using cumulative sum of an employees salary over a period of 3 months and then exclude the most recent month from the result.
		Think about 2 months as a start. By joining this Employee table with itself, you can get salary information for one more month.
		
		JOIN 2 TABLES FOR 2 MONTHS
			select * from employee e1
				left join employee e2
					on (e2.id=e1.id  and e2.month=e1.month -1)
						order by e1.id asc,e1.month desc;
						+------+-------+--------+------+-------+--------+
						| id   | month | salary | id   | month | salary |
						+------+-------+--------+------+-------+--------+
						|    1 |     4 |     60 |    1 |     3 |     40 |
						|    1 |     3 |     40 |    1 |     2 |     30 |
						|    1 |     2 |     30 |    1 |     1 |     20 |
						|    1 |     1 |     20 | NULL |  NULL |   NULL |
						|    2 |     2 |     30 |    2 |     1 |     20 |
						|    2 |     1 |     20 | NULL |  NULL |   NULL |
						|    3 |     4 |     70 |    3 |     3 |     60 |
						|    3 |     3 |     60 |    3 |     2 |     40 |
						|    3 |     2 |     40 | NULL |  NULL |   NULL |
						+------+-------+--------+------+-------+--------+
	
				Note:
				The blank value in the output is actually NULL in the database.
				The first three columns are from E1, and the rest ones are from E2.
				
		JOIN 2 TABLES FOR 2 MONTHS AND ADD CUMULATIVE SUM
			 select  e1.id
			   , e1.month 
			   , (ifnull(e1.salary,0) +ifnull(e2.salary,0)) total
				  from employee e1
				 left join employee e2
				 on (e2.id=e1.id  and e2.month=e1.month -1)
				 order by e1.id asc,e1.month desc;
				 
					 +------+-------+-------+
					| id   | month | total |
					+------+-------+-------+
					|    1 |     4 |   100 |
					|    1 |     3 |    70 |
					|    1 |     2 |    50 |
					|    1 |     1 |    20 |
					|    2 |     2 |    50 |
					|    2 |     1 |    20 |
					|    3 |     4 |   130 |
					|    3 |     3 |   100 |
					|    3 |     2 |    40 |
					+------+-------+-------+
				 
		WE CAN JOIN MORE TABLES TO GET CUMULATIVE SUM HERE WE ARE JOINING THE SAM TABLE THRICE
			 select  e1.id
				   , e1.month 
				   , (ifnull(e1.salary,0) +ifnull(e2.salary,0)+ifnull(e3.salary,0)) total
					  from employee e1
					 left join employee e2
					 on (e2.id=e1.id  and e2.month=e1.month -1)
					 left join employee e3
					 on (e3.id=e2.id  and e3.month=e1.month -2)
					 order by e1.id asc,e1.month desc;
			 
		WE NEED TO EXCLUDE THE LAST MONTH (Get the max month)
			select id
					, max(month)
					from employee
					group by id;
			+------+------------+
			| id   | max(month) |
			+------+------------+
			|    1 |          4 |
			|    2 |          2 |
			|    3 |          4 |
			+------+------------+
		
		# when we use greater symbol we eliminate the top row
		select * from
         (select id
                 , max(month) as months
                  from employee
                  group by id) as maxmonth
                    left join
                  employee e1
                  on maxmonth.id=e1.id
                    and maxmonth.month >e1.month
		
		+------+-------+------+-------+--------+
		| id   | month | id   | month | salary |
		+------+-------+------+-------+--------+
		|    1 |     4 |    1 |     1 |     20 |
		|    2 |     2 |    2 |     1 |     20 |
		|    1 |     4 |    1 |     2 |     30 |
		|    3 |     4 |    3 |     2 |     40 |
		|    1 |     4 |    1 |     3 |     40 |
		|    3 |     4 |    3 |     3 |     60 |
		+------+-------+------+-------+--------+			
					
		FINAL ANSWER
			select e1.id
             , e1.month
             , ifnull(e1.salary,0) + ifnull(e2.salary,0) +ifnull(e3.salary,0) total 
           from
               (select id, max(month) as month from employee group by id  ) as m
                    left join employee e1
                      on m.id=e1.id and m.month >e1.month
                    left join employee e2
                      on e2.id=e1.id and e2.month=e1.month-1
                    left join employee e3
                      on e3.id=e2.id and e3.month=e1.month-2
                  order by e1.id,e1.month desc;


					
		
