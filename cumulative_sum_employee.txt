The employee table holds the salary information in a year.

Write a SQL to get the cumulative sum of an employee's salary over a period of 3 months but exclude the most recent month.

The result should be displayed by 'id' ascending, and then by 'month' descending.

Example
Input

| id | month | salary |
|----|-------|--------|
| 1  | 1     | 20     |
| 2  | 1     | 20     |
| 1  | 2     | 30     |
| 2  | 2     | 30     |
| 3  | 2     | 40     |
| 1  | 3     | 40     |
| 3  | 3     | 60     |
| 1  | 4     | 60     |
| 3  | 4     | 70     |
Output

| id | month | salary |
|----|-------|--------|
| 1  | 3     | 90     |
| 1  | 2     | 50     |
| 1  | 1     | 20     |
| 2  | 1     | 20     |
| 3  | 3     | 100    |
| 3  | 2     | 40     |

DDL SCRIPTS
	create table employee (id int,month int,salary int);
	insert into  employee values(1,1,20);
	insert into  employee values(2,1,20);
	insert into  employee values(1,2,30);
	insert into  employee values(2,2,30);
	insert into  employee values(3,2,40);
	insert into  employee values(1,3,40);
	insert into  employee values(3,3,60);
	insert into  employee values(1,4,60);
	insert into  employee values(3,4,70);

			1  , 1     , 20     
			2  , 1     , 20     
			1  , 2     , 30     
			2  , 2     , 30     
			3  , 2     , 40     
			1  , 3     , 40     
			3  , 3     , 60     
			1  , 4     , 60     
			3  , 4     , 70     
	Explanation
	employee '1' has 3 salary records for the following 3 months except the most recent month '4': salary 40 for month '3', 30 for month '2' and 20 for month '1'
	So the cumulative sum of salary of this employee over 3 months is 90(40+30+20), 50(30+20) and 20 respectively.

	| id | month | salary |
	|----|-------|--------|
	| 1  | 3     | 90     |
	| 1  | 2     | 50     |
	| 1  | 1     | 20     |
	employee '2' only has one salary record (month '1') except its most recent month '2'.
	| id | month | salary |
	|----|-------|--------|
	| 2  | 1     | 20     |
	Employ '3' has two salary records except its most recent pay month '4': month '3' with 60 and month '2' with 40. So the cumulative salary is as following.
	| id | month | salary |
	|----|-------|--------|
	| 3  | 3     | 100    |
	| 3  | 2     | 40     |


	select e.id, 
       max(e.month) month, 
       sum(if(e.month<=m.month-(select max(month) from employee),0,e.salary)) salary
    from employee e 
    inner join employee m 
    on e.id = m.id 
    and e.month < m.month
    group by e.id, m.month
    order by e.id, month desc;