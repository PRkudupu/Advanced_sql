DDL
	Create table   Employee (Id int, Name varchar(255), Salary int, DepartmentId int);
	Create table   Department (Id int, Name varchar(255));

	insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '85000', '1');
	insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2');
	insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2');
	insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1');
	insert into Employee (Id, Name, Salary, DepartmentId) values ('5', 'Janet', '69000', '1');
	insert into Employee (Id, Name, Salary, DepartmentId) values ('6', 'Randy', '85000', '1');
	insert into Employee (Id, Name, Salary, DepartmentId) values ('7', 'Will', '70000', '1');

	insert into Department (Id, Name) values ('1', 'IT');
	insert into Department (Id, Name) values ('2', 'Sales');
	
	
	The Employee table holds all employees. Every employee has an Id, and there is also a column for the department Id.

	+----+-------+--------+--------------+
	| Id | Name  | Salary | DepartmentId |
	+----+-------+--------+--------------+
	| 1  | Joe   | 85000  | 1            |
	| 2  | Henry | 80000  | 2            |
	| 3  | Sam   | 60000  | 2            |
	| 4  | Max   | 90000  | 1            |
	| 5  | Janet | 69000  | 1            |
	| 6  | Randy | 85000  | 1            |
	| 7  | Will  | 70000  | 1            |
	+----+-------+--------+--------------+
	The Department table holds all departments of the company.

	+----+----------+
	| Id | Name     |
	+----+----------+
	| 1  | IT       |
	| 2  | Sales    |
	+----+----------+

	1) WRITE A SQL QUERY FINF EMPLOYEES WHO EARN THE TOP THREE SALARIES IN EACH OF THE DEPARTMENT. 
	+------------+----------+--------+
	| Department | Employee | Salary |
	+------------+----------+--------+
	| IT         | Max      | 90000  |
	| IT         | Randy    | 85000  |
	| IT         | Joe      | 85000  |
	| IT         | Will     | 70000  |
	| Sales      | Henry    | 80000  |
	| Sales      | Sam      | 60000  |
	+------------+----------+--------+


	select  a.Name Department
        , a.Employee 
        , a.Salary
		from
		(select   d.Name
            , dense_rank() over(partition by e.DepartmentId order by e.Salary Desc) as rnk
            , Salary
            , e.Name as Employee
            from Employee e
            join  Department d
            on e.DepartmentId=d.Id)a
        where a.rnk <=3;
    
	+------------+----------+--------+
	| Department | Employee | Salary |
	+------------+----------+--------+
	| IT         | Max      |  90000 |
	| IT         | Joe      |  85000 |
	| IT         | Randy    |  85000 |
	| IT         | Will     |  70000 |
	| Sales      | Henry    |  80000 |
	| Sales      | Sam      |  60000 |
	+------------+----------+--------+
	