	STUDENT
	attendance: date | student_id | attendance

	student: student_id | school_id | grade_level | date_of_birth | hometown

	CREATE TABLE attendance (
		date    timestamp,
		student_id    int,
		attendance    int -- 0, 1
	);

	INSERT INTO attendance VALUES ('2018/01/02', 2,1);
	INSERT INTO attendance VALUES ('2018/01/02', 1,1);
	INSERT INTO attendance VALUES ('2018/01/02', 4,1);
	INSERT INTO attendance VALUES ('2018/02/02', 5,1);
	INSERT INTO attendance VALUES ('2018/02/22', 1,1);
	INSERT INTO attendance VALUES ('2018/02/22', 4,1);
	INSERT INTO attendance VALUES ('2018/02/22', 5,1);
	INSERT INTO attendance VALUES ('2020/03/07', 4,1);
	INSERT INTO attendance VALUES ('2020/03/07', 5,1);
	INSERT INTO attendance VALUES ('2020/03/07', 8,1);
	INSERT INTO attendance VALUES ('2020/03/07', 9,1);


	CREATE TABLE student (
		student_id    int,
		school_id    int,
		grade_level int,
		date_of_birth timestamp,
		hometown varchar(80)        
	);

	INSERT INTO student VALUES (1,100, 4 ,'1994/01/02','LA');
	INSERT INTO student VALUES (2,100, 4 ,'1994/01/02','LA');
	INSERT INTO student VALUES (3,100, 4 ,'1994/01/02','LA');
	INSERT INTO student VALUES (4,100, 4 ,'1994/01/02','LA');
	INSERT INTO student VALUES (5,100, 3 ,'1994/01/02','LA');
	INSERT INTO student VALUES (6,100, 3 ,'1994/01/02','LA');
	INSERT INTO student VALUES (7,100, 2 ,'1994/01/02','LA');
	INSERT INTO student VALUES (8,200, 3 ,'1994/01/02','LA');
	INSERT INTO student VALUES (9,200, 2 ,'1994/01/02','LA');
	
	
	+------------+-----------+-------------+---------------------+----------+
	| student_id | school_id | grade_level | date_of_birth       | hometown |
	+------------+-----------+-------------+---------------------+----------+
	|          1 |       100 |           4 | 1994-01-02 00:00:00 | LA       |
	|          2 |       100 |           4 | 1994-01-02 00:00:00 | LA       |
	|          3 |       100 |           4 | 1994-01-02 00:00:00 | LA       |
	|          4 |       100 |           4 | 1994-01-02 00:00:00 | LA       |
	|          5 |       100 |           3 | 1994-01-02 00:00:00 | LA       |
	|          6 |       100 |           3 | 1994-01-02 00:00:00 | LA       |
	|          7 |       100 |           2 | 1994-01-02 00:00:00 | LA       |
	+------------+-----------+-------------+---------------------+----------+
	
	+---------------------+------------+------------+
	| date                | student_id | attendance |
	+---------------------+------------+------------+
	| 2018-01-02 00:00:00 |          2 |          1 |
	| 2018-01-02 00:00:00 |          1 |          1 |
	| 2018-01-02 00:00:00 |          4 |          1 |
	| 2018-02-02 00:00:00 |          5 |          1 |
	| 2018-02-22 00:00:00 |          1 |          1 |
	| 2018-02-22 00:00:00 |          4 |          1 |
	| 2018-02-22 00:00:00 |          5 |          1 |
	| 2020-03-07 00:00:00 |          4 |          1 |
	| 2020-03-07 00:00:00 |          5 |          1 |
	| 2020-03-07 00:00:00 |          8 |          1 |
	| 2020-03-07 00:00:00 |          9 |          1 |
	+---------------------+------------+------------+
	1) WHICH GRADE LEVEL CURRENTLY HAS THE MOST STUDENTS IN THIS SCHOOL DISTRICT?
	2) What was the overall attendance rate for the school district yesterday?
	3) Which school had the average highest attendance rate? the lowest?
	
	
	1) WHICH GRADE LEVEL CURRENTLY HAS THE MOST STUDENTS IN THIS SCHOOL DISTRICT?
	POSTGRESQL
		select grade_level , count(student_id) as cnt 
			 from student 
			 group by grade_level
			 order by cnt desc
			 limit 1;
	
	MYSQL
		select  max(a.student_cnt) 
			from (select grade_level ,count(student_id) student_cnt from student group by grade_level) 
		a group by a.grade_level;
	+------+-------------+
	| cnt  | grade_level |
	+------+-------------+
	|    4 |           4 |
	+------+-------------+
	
	with cte as 
		(select grade_level,count(distinct student_id) as cnt 
				from student 
			
	select grade_level 
		from cte 
		where cnt=(select max(cnt) from cte);
	
	+-------------+
	| grade_level |
	+-------------+
	|           4 |
	+-------------+
	
	with ranking window function
	  select b.grade_level 
		from (select rank() over (order by a.student_cnt desc ) as rnk,a.grade_level 
					from (select grade_level ,count(student_id) student_cnt from student group by grade_level)
				a ) b
     where b.rnk=1;
	 
	using over 
	 select grade_level
		  from
		  (select grade_level
				, count(student_id)  cnt
				, max(count(student_id)) over() max_cnt 
				from 
				student
				group by grade_level)
				a 
    where a.cnt=a.max_cnt;
	+-------------+
	| grade_level |
	+-------------+
	|           4 |
	+-------------+
	2)What was the overall attendance rate for the school district yesterday?
	#POSTGRESQL
		select cast(a.cnt as float) / cast(b.total as float)  as attendance_rate,a.cnt,b.total
			from
				(select count(student_id) cnt
					from attendance
					where date_part('day', now() -date) <=2
				)a
			,
			(
				select count(student_id) as total
				from student 
			)b;
		
	#MY SQL
	#DATE DIFFERENCE
		select datediff(curdate(),date) as diff
			,date
		   from attendance;
		
		+------+---------------------+
		| diff | date                |
		+------+---------------------+
		|  796 | 2018-01-02 00:00:00 |
		|  796 | 2018-01-02 00:00:00 |
		|  796 | 2018-01-02 00:00:00 |
		|  765 | 2018-02-02 00:00:00 |
		|  745 | 2018-02-22 00:00:00 |
		|  745 | 2018-02-22 00:00:00 |
		|  745 | 2018-02-22 00:00:00 |
		|    1 | 2020-03-07 00:00:00 |
		|    1 | 2020-03-07 00:00:00 |
		|    1 | 2020-03-07 00:00:00 |
		|    1 | 2020-03-07 00:00:00 |
		+------+---------------------+

	#PERCENTAGE
	MYSQL
		select  (a.cnt / b.total_cnt) * 100 as attendence_rate
			, a.cnt
			, b.total_cnt
			from
				(select count(student_id) cnt
					from attendance
				where datediff(curdate(),date) =1
				)a
			,
				(select count(student_id) total_cnt
				   from attendance
				)b;
			+-----------------+-----+-----------+
			| attendence_rate | cnt | total_cnt |
			+-----------------+-----+-----------+
			|         36.3636 |   4 |        11 |
			+-----------------+-----+-----------+
		
		select cast(a.cnt as float) / cast(b.total as float) * 100 as attendance_rate,a.cnt,b.total
			from
				(select count(student_id) cnt
					from attendance
					where date_part('day', now() -date) <=2
				)a
			,
			(
				select count(student_id) as total
				from student 
			)b;
	
	3)Which school had the average highest attendance rate? the lowest?
	  -- take avarage
	  -- daily attendance per school
		 select count(a.student_id) as cnt
			,school_id
			,date
				from attendance a
				join student s
					on a.student_id=s.student_id
			group by school_id,date;
      
	  -- number of students per school
	  
	select f.school_id, avg(f.rate_per_school_per_day) as avg_rate
	    from
	    --rate per school per day
	    (select a.date,a.school_id, cast(a.daily_att as float)/b.no_students  rate_per_school_per_day
			from
			--daily attendance
			(select count(t1.student_id) daily_att
				,t2.school_id
				,t1.date
				from attendance t1
				join student t2
				on t2.student_id=t1.student_id
				group by t2.school_id,t1.date
			)a
			join
			-- no of students
			(select count(student_id) no_students
				, school_id
				from student
				group by school_id
			)b    
		   on a.school_id=b.school_id
		)f
    group by f.school_id
	  
	
	select cast(b.daily_att/a.total as decimal(4,2)) rate
          , a.school_id 
          , b.date 
          , max(cast(b.daily_att/a.total as decimal(4,2)))  over() max_cnt
          , min(cast(b.daily_att/a.total as decimal(4,2)))  over() min_cnt
          , avg(cast(b.daily_att/a.total as decimal(4,2))) over() avg_att
    from
        (select  count(student_id) total
                ,school_id
               from student
               group by school_id

          )a
         join
         (select s.school_id
                , count(a.student_id) daily_att
                , a.date
           from student s
           join attendance a
           on s.student_id= a.student_id
           group by s.school_id,a.date
          )b
          on a.school_id=b.school_id
      
	+------+-----------+---------------------+---------+---------+----------+
	| rate | school_id | date                | max_cnt | min_cnt | avg_att  |
	+------+-----------+---------------------+---------+---------+----------+
	| 0.43 |       100 | 2018-01-02 00:00:00 |    1.00 |    0.14 | 0.458000 |
	| 0.14 |       100 | 2018-02-02 00:00:00 |    1.00 |    0.14 | 0.458000 |
	| 0.43 |       100 | 2018-02-22 00:00:00 |    1.00 |    0.14 | 0.458000 |
	| 0.29 |       100 | 2020-03-07 00:00:00 |    1.00 |    0.14 | 0.458000 |
	| 1.00 |       200 | 2020-03-07 00:00:00 |    1.00 |    0.14 | 0.458000 |
	+------+-----------+---------------------+---------+---------+----------+