#DDL
	create table friend_request 
                (sender_id int 
                 , send_to_id int
                 , request_date varchar(50)
                 );
	
	insert into friend_request values(1,2,'2016_06-01');
	insert into friend_request values(1,3,'2016_06-01');
	insert into friend_request values(1,4,'2016_06-01');
	insert into friend_request values(2,3,'2016_06-02');
	insert into friend_request values(3,4,'2016_06-09');
	
	create table request_accepted 
                ( requester_id  int 
                 , accepter_id int
                 , accept_date varchar(50)
                 );
	
	insert into request_accepted values(1,2,'2016_06-03');
	insert into request_accepted values(1,3,'2016-06-08');
	insert into request_accepted values(2,3,'2016-06-08');
	insert into request_accepted values(3,4,'2016-06-09');
	insert into request_accepted values(3,4,'2016-06-10');
	
# DATA
	friend_request
	+-----------+------------+--------------+
	| sender_id | send_to_id | request_date |
	+-----------+------------+--------------+
	|         1 |          2 | 2016_06-01   |
	|         1 |          3 | 2016_06-01   |
	|         1 |          4 | 2016_06-01   |
	|         2 |          3 | 2016_06-02   |
	|         3 |          4 | 2016_06-09   |
	+-----------+------------+--------------+
	
	request_accepted
	+--------------+-------------+-------------+
	| requester_id | accepter_id | accept_date |
	+--------------+-------------+-------------+
	|            1 |           2 | 2016_06-03  |
	|            1 |           3 | 2016-06-08  |
	|            2 |           3 | 2016-06-08  |
	|            3 |           4 | 2016-06-09  |
	|            3 |           4 | 2016-06-10  |
	+--------------+-------------+-------------+
	
#QUESTION
#In social network like Facebook or Twitter, people send friend requests and accept others’ requests as well. Now given two tables as below:

	Write a query to find the overall acceptance rate of requests rounded to 2 decimals, which is the number of acceptance divide the number of requests.
	For the sample data above, your query should return the following result.
    1)
	|accept_rate|
	|-----------|
	|       0.80|
	
	Note:
	The accepted requests are not necessarily from the table friend_request. In this case, you just need to simply count the total accepted requests (no matter whether they are in the original requests), and divide it by the number of requests to get the acceptance rate.
	It is possible that a sender sends multiple requests to the same receiver, and a request could be accepted more than once. In this case, the ‘duplicated’ requests or acceptances are only counted once.
	If there is no requests at all, you should return 0.00 as the accept_rate.
	
	
	Explanation: There are 4 unique accepted requests, and there are 5 requests in total. So the rate is 0.80.
	Approach: Using ROUND and IFNULL [Accepted]
	Intuition

	Count the accepted requests and then divides it by the number of all requests.
	DISTINCT
	
	To get the distinct number of accepted requests, we can query from the request_accepted table.

		select count(*) 
			from (select distinct requester_id
				  , accepter_id
				  from request_accepted) a;
	
	With the same technique, we can have the total number of requests from the friend_request table:

		select count(*) 
			from (select distinct sender_id
				  , send_to_id 
				 from friend_request
				  )b;
    
		(select count(*) 
			from (select distinct requester_id
				  , accepter_id
				  from request_accepted)a) 
		/ 
		(select count(*) 
				from (select distinct sender_id
					  , send_to_id 
					 from friend_request
					  )b);
	
    USE IFNULL
	NOTE:
		The divisor (total number of requests) could be '0' if the table friend_request is empty. So, we have to utilize ifnull to deal with this special case.
		select
			ifnull(
				(select count(*) 
					  from (select distinct requester_id
							  , accepter_id
							  from request_accepted)a) 
				/ 
				(select count(*) 
					  from (select distinct sender_id
							  , send_to_id 
							  from friend_request)b),0);
							  
	USE ROUND : to a scale of 2 decimal places to get the required acceptance rate.
		select
		   round(
				  ifnull(
					  (select count(*) 
							from (select distinct requester_id
									, accepter_id
									from request_accepted)a) 
					  / 
					  (select count(*) 
							from (select distinct sender_id
									, send_to_id 
									from friend_request)b),0)
			 ,2) accept_rate;
		+-------------+
		| accept_rate |
		+-------------+
		|        0.80 |
		+-------------+
		select cast(count(a.cnt) 
			 / (select count(*) from friend_request) as decimal(4,2))   'conversion ratio'
		from    
		 (select count(*) cnt
			 from request_accepted 
			 group by requester_id,accepter_id)a;
	  
	2) ACCEPTANCE RATE FOR EVERY MONTH
		
		
	3) CUMULATIVE ACCEPT RATE
	
	
	